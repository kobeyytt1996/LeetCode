/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if (l1 == null || l2 == null) {
            throw new NullPointerException("空指针");
        }
        
        int addOne = 0;
        ListNode head = new ListNode(0);
        ListNode pNode = head;
        while (l1 != null || l2 != null) {
            int i1 = (l1 == null) ? 0 : l1.val;
            int i2 = (l2 == null) ? 0 : l2.val;
            int i3 = i1 + i2 + addOne;
            if (i3 >= 10) {
                addOne = 1;
                i3 -= 10;
            } else {
                addOne = 0;
            }
            pNode.next = new ListNode(i3);
            pNode = pNode.next;
            l1 = (l1 == null) ? null : l1.next;
            l2 = (l2 == null) ? null : l2.next;
        }
        if (addOne == 1) {
            pNode.next = new ListNode(1);
        }
        
        return head.next;
    }
}
