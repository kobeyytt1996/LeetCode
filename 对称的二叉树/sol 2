/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if (root == nullptr)
            return true;
        queue<TreeNode*> qTree;
        qTree.push(root->left);
        qTree.push(root->right);

        while (!qTree.empty())
        {
            TreeNode* node1 = qTree.front();
            qTree.pop();
            TreeNode* node2 = qTree.front();
            qTree.pop();

            if (node1 == nullptr && node2 == nullptr)
                continue;
            if (node1 == nullptr || node2 == nullptr)
                return false;
            if (node1->val != node2->val)
                return false;
            
            qTree.push(node1->left);
            qTree.push(node2->right);
            qTree.push(node1->right);
            qTree.push(node2->left);
        }

        return true;
    }
};
