/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if (lists == null || lists.length == 0) {
            return null;
        }
        
        int numOfLists = lists.length;
        while (numOfLists > 1) {
            int j = 0;
            for (int i = 0; i <= numOfLists - 1 ; i += 2) {
                if (i + 1 < numOfLists) {
                    lists[j++] = mergeTwo(lists[i], lists[i + 1]);
                } else {
                    lists[j++] = lists[i];
                }
            }
            numOfLists = j;
        }
        
        return lists[0];
    }
    
    private ListNode mergeTwo(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode curr = dummy;
        while (l1 != null && l2 != null) {
            if (l1.val > l2.val) {
                curr.next = l2;
                l2 = l2.next;
            } else {
                curr.next = l1;
                l1 = l1.next;
            }
            curr = curr.next;
        }
        curr.next = (l1 == null) ? l2 : l1;
        return dummy.next;
    }
}

