class Solution {
    public int firstMissingPositive(int[] nums) {
        if (nums == null) {
            return 0;
        }
        if (nums.length == 0) {
            return 1;
        }
        
        int size = nums.length;
        for (int i = 0; i < size; ++i) {
            while (nums[i] != i + 1) {
                int value = nums[i];
                if (nums[i] > 0 && nums[i] <= size) {
                    swap(nums, i, value - 1);
                }
                if (nums[i] == value) {
                    break;
                }
            }
        }
        for (int i = 0; i < size; ++i) {
            if (nums[i] != i + 1) {
                return i + 1;
            }
        }
        return size + 1;
    }
    
    private void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
