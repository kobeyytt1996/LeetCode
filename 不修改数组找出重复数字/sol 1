#include <iostream>
using std::cout;
using std::endl;
int countRange(const int*, int, int, int);
int getDuplication(const int *numbers, int length)
{
	if (numbers == nullptr || length <= 0)
		return -1;
	int start = 1;
	int end = length - 1;
	while (end >= start) {
		int middle = ((end - start) >> 1) + start;
		int count = countRange(numbers, length, start, middle);

		if (end == start)
		{
			if (count > 1)
				return start;
			else
				return -1;
		}

		if (count >= middle - start + 1)
			end = middle;
		else
			start = middle + 1;
	}
	return -1;
}

int countRange(const int* numbers, int length, int start, int end)
{
	int count = 0;
	for (int i = 0; i != length; ++i)
	{
		if (numbers[i] >= start && numbers[i] <= end)
			++count;
	}
	return count;
}

int main() {
	int vec[5] = { 1, 2, 4, 1, 3 };
	cout << getDuplication(vec, 5) << endl;
}

