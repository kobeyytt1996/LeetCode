import java.util.PriorityQueue;

class Solution {
    public int[] getLeastNumbers(int[] arr, int k) throws Exception {
        if (arr == null)
            throw new NullPointerException("无效引用");
        if (k < 0 || k > arr.length)
            throw new Exception("无效输入k");
        if (arr.length == 0 || k ==0)
            return new int[0];

        PriorityQueue<Integer> kLeast = new PriorityQueue<>((i1, i2) -> i2 - i1);
        for (int i = 0; i < arr.length; ++i){
            if (i < k) {
                kLeast.offer(arr[i]);
            } else if (arr[i] < kLeast.peek()) {
                kLeast.poll();
                kLeast.offer(arr[i]);
            }
        }

        int[] result = new int[k];
        int index = 0;
        for (Integer i : kLeast){
            result[index++] = i;
        }
        return result;

    }


}
