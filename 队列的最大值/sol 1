class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        if (nums.empty() || k <= 0 || k > nums.size())
            return vector<int>();
        deque<decltype(nums.size())> index;
        vector<int> result;

        for (unsigned int i = 0; i < k - 1; ++i)
        {
            while (!index.empty() && nums[i] >= nums[index.back()])
                index.pop_back();
            index.push_back(i);
        }

        for (unsigned int i = k - 1; i < nums.size(); ++i)
        {
            while (!index.empty() && i - index.front() >= k)
                index.pop_front();
            while (!index.empty() && nums[i] >= nums[index.back()])
                index.pop_back();
            index.push_back(i);
            result.push_back(nums[index.front()]);
        }
        return result;
    }
};
