class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        if (nums == null) {
            throw new NullPointerException("数组指针为空");
        }
        if (k < 1 || k > nums.length) {
            throw new RuntimeException("滑动窗口大小错误");
        }

        LinkedList<Integer> recordMax = new LinkedList<>();
        for (int i = 0; i < k - 1; ++i) {
            addMax(recordMax, nums[i]);
        }

        int count = nums.length - k + 1;
        int[] result = new int[count];
        for (int i = 0; i < count; ++i) {
            addMax(recordMax, nums[i + k - 1]);
            result[i] = recordMax.getLast();
            if (nums[i] == result[i]) {
                recordMax.removeLast();
            }           
        }

        return result;
    }

    private void addMax(LinkedList<Integer> recordMax, int number) {
        while (recordMax.size() != 0 && number > recordMax.getFirst()) {
            recordMax.removeFirst();
        }
        recordMax.addFirst(number);
    }
}
