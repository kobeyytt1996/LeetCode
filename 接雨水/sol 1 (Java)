class Solution {
    public int trap(int[] height) {
        if (height == null) {
            throw new NullPointerException("空指针");
        }
        if (height.length == 0) {
            return 0;
        }

        int result = 0;
        int left = 1;
        int right = height.length - 2;
        int max_left = 0;
        int max_right = 0;

        while (left <= right) {
            max_left = Math.max(max_left, height[left - 1]);
            max_right = Math.max(max_right, height[right + 1]);
            if (max_left <= max_right) {
                if (height[left] < max_left) {
                    result += max_left - height[left];
                }
                ++left;
            } else {
                if (height[right] < max_right) {
                    result += max_right - height[right];
                }
                --right;
            }
        }

        return result;
    }
}
