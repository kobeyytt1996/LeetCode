class Solution {
    public int largestRectangleArea(int[] heights) {
        if (heights == null || heights.length == 0) {
            return 0;
        }
        
        ArrayDeque<Integer> indexStack = new ArrayDeque<>();
        indexStack.addFirst(-1);
        int max = 0;
        for (int i = 0; i < heights.length; ++i) {
            if (indexStack.size() == 1) {
                indexStack.addFirst(i);
                continue;
            }
            while (indexStack.size() > 1) {
                if (heights[i] >= heights[indexStack.getFirst()]) {
                    break;
                } else {
                    int out = indexStack.removeFirst();
                    int area = heights[out] * (i - indexStack.getFirst() - 1);
                    max = Math.max(max, area);
                }
            }
            indexStack.addFirst(i);
        }
        
        while (indexStack.size() > 1) {
            int out = indexStack.removeFirst();
            int area = heights[out] * (heights.length - indexStack.getFirst() - 1);
            max = Math.max(max, area);
        }
        return max;
    }
}
