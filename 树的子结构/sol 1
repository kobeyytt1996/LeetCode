/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSubStructure(TreeNode* A, TreeNode* B) {
        bool result = false;
        if (A == nullptr || B == nullptr)
            return result;
        if (A->val == B->val)
            result = TreeAHasTreeB(A->left, B->left) && TreeAHasTreeB(A->right, B->right);
        if (!result)
            result = isSubStructure(A->left, B);
        if (!result)
            result = isSubStructure(A->right, B);
        
        return result;
    }

    bool TreeAHasTreeB(TreeNode* A, TreeNode* B)
    {
        if (B == nullptr)
            return true;
        if (A == nullptr)
            return false;
        bool result = false;
        if (A->val == B->val)
            result = TreeAHasTreeB(A->left, B->left) && TreeAHasTreeB(A->right, B->right);
        return result;
    }
};
