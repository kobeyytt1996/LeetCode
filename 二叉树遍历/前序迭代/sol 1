/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        if (root == nullptr)
            return vector<int>();
        vector<int> result;
        TreeNode* pNode = root;
        TreeNode* pRight = pNode->right;
        stack<TreeNode*> s;
        while (true)
        {
            while (pNode)
            {
                result.push_back(pNode->val);
                pRight = pNode->right;
                if (pRight)
                    s.push(pRight);
                pNode = pNode->left;
            }
            if (!s.empty())
            {
                pNode = s.top();
                s.pop();
            }
            else 
                break;
        }

        return result;
    }
};
