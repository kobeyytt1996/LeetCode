/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> result;
        if (root == nullptr)
            return result;
        stack<TreeNode*> s;
        TreeNode* pNode = root;  //记录需要压入栈的左子树的根节点
        TreeNode* pBefore = nullptr;  //记录上一个推入result向量的节点
        while (true)
        {
            while (pNode)
            {
                s.push(pNode);
                pNode = pNode->left;
            }

            if (s.empty())
                break;
            TreeNode* pTop = s.top();
            if (pTop->right == nullptr || pTop->right == pBefore)
            {
                result.push_back(pTop->val);
                pBefore = pTop;
                s.pop();
                pNode = nullptr;
            }
            else
                pNode = pTop->right;
        } 
        return result; 
    }
};
