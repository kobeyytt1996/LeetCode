class Solution {
    public int maxValue(int[][] grid) {
        if (grid == null)
            throw new NullPointerException("棋盘指针不能为空");
        if (grid.length == 0 || grid[0].length == 0)
            return 0;

        int m = grid.length;
        int n = grid[0].length;
        int[] dynamicRow = new int[n];

        for (int i = 0; i < m; ++i){
            dynamicRow[0] += grid[i][0];
            for (int j = 1; j < n; ++j){
                dynamicRow[j] = max(dynamicRow[j - 1], dynamicRow[j]);
                dynamicRow[j] += grid[i][j];
            }
        }

        return dynamicRow[n - 1];
    }

    public int max(int a, int b){
        if (a > b) {
            return a;
        } else {
            return b;
        }
    }
}
