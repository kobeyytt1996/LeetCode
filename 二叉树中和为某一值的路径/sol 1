/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>> result;
        if (root == nullptr)
            return result;
        vector<int> path;
        int currentSum = 0;
        FindPath(root, sum, path, currentSum, result);
        return result;
    }

    void FindPath(TreeNode* root, int sum, vector<int>& path, int currentSum,                 
                    vector<vector<int>>& result)
    {
        currentSum += root->val;
        path.push_back(root->val);
        if (root->left == nullptr && root->right == nullptr)
        {
            if (currentSum == sum)
                result.push_back(path);
        }

        if (root->left != nullptr)
            FindPath(root->left, sum, path, currentSum, result);
        if (root->right != nullptr)
            FindPath(root->right, sum, path, currentSum, result);
            
        path.pop_back();
    }
};
